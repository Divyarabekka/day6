
1) Movie:

class movie{

constructor(title,studio,rating)
{
this.title=title;
this.studio=studio;
this.rating=rating;
}
getPG(){
return this.rating;
}
}
var m = new movie("casino Royale","Eon Productions","PG­13");
console.log(m.getPG());
----------------------------------------------------------
2)Circle:

var colorData = "Red" | "Yellow" | "Blue" | "Green"
class Circle{
    radius  = 1
    color = "Red"

    //to create a constructor with optional parameter
    constructor(radius, color){
        if(typeof(radius)!=="undefined") { this.radius = radius }
        if(typeof(color)!=="undefined") { this.color = color }
    }
    
    //function to get radius value with number as return type
    getRadius(){
        return this.radius
    }

    //function to set radius value
    setRadius(radius){
        this.radius = radius
    }

    //function to get color value with custom return type
    getColor(){
        return this.color
    }

    //function to set the color value
    setColor(color){
        this.color = color
    }

    //to return string of member variables value
    toString()
    {
        return `Radius: ${this.radius} Color: ${this.color}`
    }

    //to compute and return circle area using radius
    getArea(){
        return ((Math.PI)*this.radius*this.radius)
    }

    //to compute and return circle circumference using radius
    getCircumference(){
        return (2*(Math.PI)*this.radius)
    }
}

//to invoke the Circle-class constructor with no params
let c1 = new Circle()
console.log("Constructor with no params: "+ c1.toString())

//to invoke the Circle-class constructor with one params
let c2 = new Circle(3.5)
console.log("Constructor with one params: "+ c2.toString())

//to invoke the Circle-class constructor with all the params
let c3 = new Circle(2.2, 'Yellow')
console.log("getRadius: "+c3.getRadius())
c3.setRadius(3.3)
console.log("Radius value after setRadius: " +c3.getRadius())
console.log("getColor: "+c3.getColor())
c3.setColor("Blue")
console.log("Color Value after setColor: " + c3.getColor())
console.log(c3.toString())
console.log("Area: "+c3.getArea())
console.log("Circumference: "+c3.getCircumference())
--------------------------------------------------------

3)Write a “person” class to hold all the details.

class person{

constructor(name,age,course,grade,)
{
this.name=name;
this.age=age;
this.course=course;
this.grade=grade;
}
}
var m = new person("AA","22","CSE","S");
var m1= new person("BB","23","ECE","A");
var m2 = new person("CC","20","CIVIL","S");

console.log(m.name,m.age,m.course,m.grade);
console.log(m1.name,m1.age,m1.course,m1.grade);
console.log(m2.name,m2.age,m2.course,m2.grade)
------------------------------------------------------
4)calculate the uber price.

let baseFee = 20
let cities = ["chennai", "trichy", "madurai", ]
let uberRates = [500, 100, 150]
let customerName = "Raj" 
let customerCity = "trichy" 
console.log("Hello", customerName+ ", welcome to the Uber Rate Program")
function getRate(customerCity) {
  
  function uberRate(customerCity, index) {
    
    let finalRate = (uberRates[index]) * baseFee
    return finalRate
  }
  console.log(customerCity, "rate is:", uberRate(customerCity, cities.indexOf(customerCity)))
}
getRate(customerCity)